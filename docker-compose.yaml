version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper-data-volume:/var/lib/zookeeper

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data-volume:/var/lib/kafka/data
  
  postgres:
    image: postgres:13
    # Environment variables to create the Airflow user and database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - kafka-network
    # Expose PostgreSQL port for external connections
    ports:
    - "5432:5432"
    # Mount volume for persisting database data
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    # Always restart service if it stops
    restart: always
  # PGAdmin service for managing PostgreSQL database
  pgadmin: 
    image: dpage/pgadmin4
    restart: always
    # Default email and password for PGAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - kafka-network
    # Expose PGAdmin web UI port for external connections
    ports:
      - "5050:80"

  consumer:
    build:
      context: ./consumer
    networks:
      - kafka-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - kafka
      - postgres
    command: ["/wait-for-it.sh", "kafka:9092", "--", "/wait-for-it.sh", "postgres:5432", "--", "python", "consumer.py"]

  producer:
    build:
      context: ./producer
    networks:
      - kafka-network
    environment:
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
    depends_on:
      - kafka
    command: ["/wait-for-it.sh", "kafka:9092", "--", "python", "producer.py"]

# Defining a named volume for PostgreSQL data persistence
volumes:
  postgres-db-volume:
  zookeeper-data-volume:
  kafka-data-volume:

networks:
  kafka-network:
    driver: bridge